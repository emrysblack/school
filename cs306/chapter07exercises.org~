# Created 2016-05-28 Sat 23:58
#+OPTIONS: H:4 num:nil toc:nil \n:nil @:t ::t |:t ^:t *:t TeX:t LaTeX:t
#+TITLE: Chapter 7 Exercises
#+AUTHOR: Brady Field
#+LANGUAGE: en
#+STARTUP: showeverything

* Partners in crime 
Landon - helped clarify what a few of the questions
were asking, and helped catch me up on what I missed after I had to
leave class on Friday.
** Solution to Exercise 1 on page 274

*a.* open hash table

|[ 0 ] |[ 1 ]     |[ 2 ]|[ 3 ]|[ 4 ]|[ 5 ]|[ 6 ]|[ 7 ]|[ 8 ]     |[ 9 ]     |[ 10 ]|
|      |\downarrow|     |     |     |     |     |     |\downarrow|\downarrow|      |
|      |56        |     |     |     |     |     |     |30        |20        |      |
|      |          |     |     |     |     |     |     |\downarrow|\downarrow|      |
|      |          |     |     |     |     |     |     |19        |75        |      |
|      |          |     |     |     |     |     |     |          |\downarrow|      |
|      |          |     |     |     |     |     |     |          |31        |      |

*b.* largest number of key comarisons

3 comparisons if looking for entry 31

*c.* average number of key comparisons

if we look for all the entrys we get (1 + 1 + 1 + 2 + 3 + 2)/6 = 5/3
comparisons
** Solution to Exercise 2 on page 274

*a.* closed hash table

|[ 0 ]     |[ 1 ]     |[ 2 ]     |[ 3 ]|[ 4 ]|[ 5 ]|[ 6 ]|[ 7 ]|[ 8 ]     |[ 9 ]     |[ 10 ]    |
|\downarrow|\downarrow|\downarrow|     |     |     |     |     |\downarrow|\downarrow|\downarrow|
|31        |56        |19        |     |     |     |     |     |30        |20        |75        |

*b.* largest number of key comarisons

6 comparisons if looking for entry 19

*c.* average number of key comparisons

if we look for all the entrys we get (1 + 1 + 1 + 2 + 3 + 6)/6 = 7/3
comparisons
** Solution to Exercise 3 on page 275
There would be way too many collisions to make the hash
effective. There are only 26 buckets for data, and far too many
possible words to fit nicely into only 26 buckets.
** Solution to Exercise 4 on page 275

\left ( \frac{1}{m} \right )^{n} * {m} = \frac{1}{m^{n-1}}

\frac{1}{m}


 is the probability of hitting a specific
bucket. We raise to the {n} for the probability of hitting every
time. We then multiply it by {m} to extend it to any single bucket.

* Exercise 3 on page 279

Find the minimum order of the B-tree that guarantees that the number
of disk accesses in searching in a file of 100 million records does
not exceed 3. Assume that the root's page is stored in main memory.

* Exercise 6 on page 279

*a.* A /*top-down 2-3-4 tree*/ is a B-tree of order 4 with the
  following modification of the /insert/ operation. Whenever a
  search for a leaf for a new key encounters a full node (i.e., a
  node with three keys), the node is split into two nodes by sending
  its middle key to the node's parent (or, if the full node happens
  to be the root, the new root for the middle key is
  created). Construct a top-down 2-3-4 tree by inserting the
  following list of keys in the initially empty tree:

=10, 6, 15, 31, 20, 27, 50, 44, 18.=

*b.* What is the principal advantage of this insertion procedure
  compared with the one used for 2-3 trees in Section 6.3?  What is
  its disadvantage?
