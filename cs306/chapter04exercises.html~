<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
               "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
lang="en" xml:lang="en">
<head>
<title>Chapter 4 Exercises</title>
<meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1"/>
<meta name="generator" content="Org-mode"/>
<meta name="generated" content="2016-05-18 21:32:28 MDT"/>
<meta name="author" content="<Your Name Goes Here>"/>
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  html { font-family: Times, serif; font-size: 12pt; }
  .title  { text-align: center; }
  .todo   { color: red; }
  .done   { color: green; }
  .tag    { background-color:lightblue; font-weight:normal }
  .target { }
  .timestamp { color: grey }
  .timestamp-kwd { color: CadetBlue }
  p.verse { margin-left: 3% }
  pre {
	border: 1pt solid #AEBDCC;
	background-color: #F3F5F7;
	padding: 5pt;
	font-family: courier, monospace;
        font-size: 90%;
        overflow:auto;
  }
  table { border-collapse: collapse; }
  td, th { vertical-align: top; }
  dt { font-weight: bold; }
  div.figure { padding: 0.5em; }
  div.figure p { text-align: center; }
  .linenr { font-size:smaller }
  .code-highlighted {background-color:#ffff00;}
  .org-info-js_info-navigation { border-style:none; }
  #org-info-js_console-label { font-size:10px; font-weight:bold;
                               white-space:nowrap; }
  .org-info-js_search-highlight {background-color:#ffff00; color:#000000;
                                 font-weight:bold; }
  /*]]>*/-->
</style>
<script type="text/javascript">
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*/-->
</script>
</head><body>
<h1 class="title">Chapter 4 Exercises</h1>


<div id="outline-container-1" class="outline-2">
<h2 id="sec-1">Exercise 7 on page 149 </h2>
<div id="text-1">


<p>
Write pseudocode for a recursive algorithm for generating all
<img src="ltxpng/chapter04exercises_0001.png"/> bit strings of length <i>n</i>.
</p>

</div>

<div id="outline-container-1.1" class="outline-3">
<h3 id="sec-1.1">Solution </h3>
<div id="text-1.1">





<pre class="example">

function build(n)

   set string_list to empty
   
   if n == 1
      push 0 onto string_list
      push 1 onto string_list
   else
      set temp_string_list to build(n - 1)
      for each item in temp_string_list
         push item + 0 onto string_list
         push item + 1 onto string list
   return string_list

function main
   set n to desired length of bitstring
   set string_list to build(n)
   display string_list
</pre>



</div>
</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2">Exercise not-in-book </h2>
<div id="text-2">


<p>
Convert this C code for doing Russian Peasant Multiplication into elisp.
</p>



<pre class="example">
  #include&lt;stdio.h&gt;

  int main()
  {
     long int a,b,rim;
     long int sum=0;

     printf("ENTER MULTIPLICAND: ");
     scanf("%ld",&amp;b);
     printf("ENTER MULTIPLIER: ");
     scanf("%ld",&amp;a);
     while(b&gt;=1)
     {
        rim=b%2;
        b=b/2;
        if(rim==1)
        {
         sum=sum+a;
         printf("%ld\n", sum);
        }
        a=a*2;
     }
     printf("%ld\n",sum);
     return 0;
  }
</pre>




<p>
Hint:
</p>



<pre class="example">
  (let ((n (string-to-int (read-from-minibuffer "ENTER NUMBER: "))))
    (* 2 n))
</pre>





</div>

<div id="outline-container-2.1" class="outline-3">
<h3 id="sec-2.1">Solution </h3>
<div id="text-2.1">




<pre class="example">
  (defun prompt (message)
  (string-to-int (read-from-minibuffer message))
)
prompt
(defun rpm ()
(let ( (a (prompt "ENTER MULTIPLICAND: "))
(b (prompt "ENTER MULTIPLIER: "))
)
(list a b) ; inside let so variables don't fall out of scope, do loopy work here


)
)
rpm


(rpm)
</pre>



</div>
</div>

</div>

<div id="outline-container-3" class="outline-2">
<h2 id="sec-3">Exercise 1 on page 166 </h2>
<div id="text-3">


<p>
<b>a.</b> If we measure an instance size of computing the greatest common
divisor of <i>m</i> and <i>n</i> by the size of the second number <i>n</i>, by how
much can the size decrease after one iteration of Euclid's algorithm?
</p>
<p>
<b>b.</b> Prove that an instance size will always decrease at least by a
factor of two after two successive iterations of Euclid's algorithm.
</p>
</div>

</div>

<div id="outline-container-4" class="outline-2">
<h2 id="sec-4">Exercise 12 on page 167 </h2>
<div id="text-4">


<p>
<i>Flipping Pancakes</i>
</p>
<p>
There are <i>n</i> pancakes all of different sizes that are stacked on
top of each other. You are allowed to slip a flipper under one of
the pancakes and flip over the whole stack above the flipper. The
purpose is to arrange pancakes according to their size with the
biggest at the bottom. (You can see a visualization of this puzzle
on the <i>Interactive Mathematics Miscellany and Puzzles</i> site
[Bog].) Design an algorithm for solving this puzzle.
</p>

</div>

<div id="outline-container-4.1" class="outline-3">
<h3 id="sec-4.1">Solution </h3>
<div id="text-4.1">




<pre class="example">
SET target_position to bottom
While(!sorted)
{
   put spatula below biggest pancake above target_position and flip
   put spatula below target position and flip
   decrease target_position by one pancake
}
</pre>



</div>
</div>

</div>

<div id="outline-container-5" class="outline-2">
<h2 id="sec-5">Exercise not-in-book </h2>
<div id="text-5">


<p>
The only research paper published by a well-known individual was
devoted to the pancakes flipping problem. Who is that individual?
</p>

</div>

<div id="outline-container-5.1" class="outline-3">
<h3 id="sec-5.1">Solution </h3>
<div id="text-5.1">

<p>Bill Gates
</p></div>
</div>
</div>
<div id="postamble"><p class="author"> Author: <Your Name Goes Here>
<a href="mailto:emrys@AUS213L31.byui.edu">&lt;emrys@AUS213L31.byui.edu&gt;</a>
</p>
<p class="date"> Date: 2016-05-18 21:32:28 MDT</p>
<p>HTML generated by org-mode 6.21b in emacs 23</p>
</div></body>
</html>
