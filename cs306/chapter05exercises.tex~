% Created 2016-05-25 Wed 20:55
\documentclass[11pt]{article}
\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
\usepackage{graphicx}
\usepackage{longtable}
\usepackage{hyperref}


\title{Chapter 5 Exercises}
\author{Brady Field}
\date{25 May 2016}

\begin{document}

\maketitle


\section*{Exercise 1 on page 174}
\label{sec-1}


\textbf{a.} Write a pseudocode for a divide-and-conquer algorithm for finding
a position of the largest element in an array of \emph{n} numbers.

\textbf{b.} What will be your algorithm's output for arrays with several
elements of the largest value?

\textbf{c.} Set up and solve a recurrence relation for the number of key
comparisons made by your algorithm.

\textbf{d.} How does this algorithm compare with the brute-force algorithm
for this problem?

\subsection*{Solution}
\label{sec-1.1}

\textbf{a}

\begin{verbatim}
maxPos(list, l, r)
IF l == r
   RETURN l
SET mid to (l + r) / 2
SET left to maxPos(list,l,mid)
SET right to maxPos(list,mid+1,r)
IF list of left > list of right
   RETURN left
ELSE
   RETURN right

\end{verbatim}


\textbf{b} The largest array index of all possible max values

\textbf{c}

\begin{verbatim}
assuming not ints...
\(T(n) = 4T(n/2) + n, T(1) = 1\)

\end{verbatim}


\textbf{d}

\section*{Exercise 5 on page 175}
\label{sec-2}


Find the order of growth for solutions of the following recurrences.

\textbf{a.} \(T(n) = 4T(n/2) + n, T(1) = 1\)

\textbf{b.} \(T(n) = 4T(n/2) + n^2, T(1) = 1\)

\textbf{c.} \(T(n) = 4T(n/2) + n^3, T(1) = 1\)

\textbf{NOTE:} No exercises are assigned for the remaining sections 5.2-5.5.

\end{document}
