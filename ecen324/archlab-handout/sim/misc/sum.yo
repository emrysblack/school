                      | # Execution begins at address 0
  0x000:              | .pos 0
  0x000: 308400010000 | init:	irmovl Stack, %esp	# Set up Stack pointer
  0x006: 308500010000 | 	irmovl Stack, %ebp	# Set up base pointer
  0x00c: 702c000000   | 	jmp    Main		# Execute main program
                      | 
                      |         # Sample linked list
  0x014:              |         .align 4
  0x014:              |         ele1:
  0x014: 0a000000     |               .long 0x00a
  0x018: 1c000000     |               .long ele2
  0x01c:              |         ele2:
  0x01c: b0000000     |               .long 0x0b0
  0x020: 24000000     |               .long ele3
  0x024:              |         ele3:
  0x024: 000c0000     |               .long 0xc00
  0x028: 00000000     |               .long 0 
                      | 
  0x02c: 308004000000 | Main:	irmovl $4,%eax
  0x032: a008         | 	pushl  %eax		# Push 4
  0x034: 308214000000 | 	irmovl ele1,%edx
  0x03a: a028         | 	pushl  %edx		# Push array
  0x03c: 8042000000   | 	call   sum_list		# Sum(array, 4)
  0x041: 10           | 	halt
                      | 
                      | # int sum_list(list_ptr ls)
  0x042:              | sum_list:
  0x042: a058         | 	pushl	%ebp
  0x044: 2045         | 	rrmovl	%esp, %ebp
  0x046: 502508000000 | 	mrmovl	8(%ebp), %edx
  0x04c: 308000000000 | 	irmovl	$0, %eax
  0x052: 6222         | 	andl	%edx, %edx
  0x054: 736e000000   | 	je	L3
  0x059:              | L6:
  0x059: 506200000000 |         mrmovl  (%edx), %esi
  0x05f: 6060         | 	addl	%esi, %eax
  0x061: 502204000000 | 	mrmovl	4(%edx), %edx
  0x067: 6222         | 	andl	%edx, %edx
  0x069: 7459000000   | 	jne	L6
  0x06e:              | L3:
  0x06e: b058         | 	popl	%ebp
  0x070: 90           | 	ret
                      | 
  0x100:              | .pos 0x100
  0x100:              | Stack:				# The stack goes here
